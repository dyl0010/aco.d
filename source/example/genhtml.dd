//
// genhtml - aco.d's example from http://www.hping.org/aco2html/ written in d.
//
module example.genhtml;

import ps.aco;

void main(string[] args) {
    assert(args.length == 3, "usage: genhtml.exe ./example.aco ./example.html");
	
    import std.conv;

	const auto aco = acoFactory(args[1].to!dstring);

    dstring page = 
    `<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
     <html><head>
     <title>photoshop aco color palette files to html converter</title>
     <style type="text/css">
     TD.item { width: 200px; text-align: center; padding-top: 10px; padding-bottom: 10px;}
     .box { margin: 0 auto; width: 30px; height: 30px; }
     .lbox { margin: 0 auto; width: 30px; height: 30px; border: 1px solid #cccccc; }
     .descr { color: #444444; font-family: verdana; font-size: 10px; }
     </style></head><body><table border="0">`d;

    import std.format: format;
    import std.algorithm;
    import std.range;

    page ~= format("<h1>%d colors from ACO file version %d</h1>\n"d, aco.count, aco.ver);

    immutable cols = 4;

    for (auto j = 0; j < aco.count; j += cols) {
        page ~= "<tr>"d;
        
        for (auto i = 0; i < cols; ++i) {
            
            if (j + i == aco.count) break;
            
            auto color = aco.colors[j + i];
            auto rgb = color.toRGB;
            dstring sclass = ((rgb.r+rgb.g+rgb.b)>235*3) ? "lbox"d : "box"d;

            page ~= "<td class=\"item\">"d;
            page ~= format("<div class=\"%s\" style=\"background-color:%s;\"></div>"d, sclass, color);
            page ~= format("<span class=\"descr\"> %s %s"d, color.name, color);
            page ~= "</span></td>\n"d;
        }

        page ~= "</tr>"d;
    }

    page ~= 
    `</table>
     <span class="credits">Generated by <a href="http://www.hping.org/aco2html/">aco2html</a></span>
     </body></html>`d;

    import std.stdio;

    auto f = File(args[2], "w");
    f.write(page);
    f.close;
}